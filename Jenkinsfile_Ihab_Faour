pipeline {
    agent any
    environment {
        VIRTUAL_ENV = 'venv'
        // Ensure PATH includes the virtual environment's Scripts directory
        PATH = "${env.WORKSPACE}\\${VIRTUAL_ENV}\\Scripts;${env.PATH}"
        // Add the workspace root to PYTHONPATH
        PYTHONPATH = "${env.WORKSPACE};${env.PYTHONPATH}"
    }
    stages {
        stage('Verify Python') {
            steps {
                bat 'python --version'
                bat 'pip --version'
            }
        }
        stage('Setup') {
            steps {
                script {
                    // Create virtual environment only if it doesn't exist
                    if (!fileExists("${env.WORKSPACE}\\${VIRTUAL_ENV}\\Scripts\\activate")) {
                        bat "python -m venv ${VIRTUAL_ENV}"
                    }
                    // Activate virtual environment and upgrade pip, then install dependencies
                    bat """
                        call ${VIRTUAL_ENV}\\Scripts\\activate
                        python -m pip install --upgrade pip
                        pip install -r requirements.txt
                    """
                }
            }
        }
        stage('Verify File Structure') {
            steps {
                bat 'dir'
                bat 'dir venv'
            }
        }
        stage('Lint') {
            steps {
                script {
                    // Activate virtual environment and run flake8
                    bat """
                        call ${VIRTUAL_ENV}\\Scripts\\activate
                        flake8 app1.py
                    """
                }
            }
        }
        stage('Test') {
            steps {
                script {
                    // Activate virtual environment and run tests
                    bat """
                        call ${VIRTUAL_ENV}\\Scripts\\activate
                        pytest
                    """
                }
            }
        }
        stage('Coverage') {
            steps {
                script {
                    // Activate virtual environment and run coverage
                    bat """
                        call ${VIRTUAL_ENV}\\Scripts\\activate
                        coverage run -m pytest
                        coverage report
                        coverage html
                    """
                }
            }
        }
        stage('Security Scan') {
            steps {
                script {
                    // Activate virtual environment and install Bandit
                    bat """
                        call ${VIRTUAL_ENV}\\Scripts\\activate
                        pip install bandit
                        bandit -r . -s B108 -o bandit-report.txt || echo 'Bandit completed with warnings, continuing build.'
                    """
                }
            }
        }
        stage('Deploy') {
            steps {
                script {
                    // Basic deployment script
                    echo "Deploying application..."
                    bat """
                        call ${VIRTUAL_ENV}\\Scripts\\activate
                        python deploy.py
                    """
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
